# MyApp.py
# D. Thiebaut
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QObject, pyqtSlot
from mainwindow import Ui_MainWindow
from models.model import Model
import sys

class MainWindowUIClass( Ui_MainWindow ):
    def __init__( self ):
        '''Initialize the super class
        '''
        super().__init__()
        self.model = Model()
        
    def setupUi( self, MW ):
        ''' Setup the UI of the super class, and add here code
        that relates to the way we want our UI to operate.
        '''
        super().setupUi( MW )

        # close the lower part of the splitter to hide the 
        # debug window under normal operations
        self.browseButton.clicked.connect(self.browseSlot)

    def debugPrint( self, msg ):
        '''Print the message in the text edit at the bottom of the
        horizontal splitter.
        '''
        self.debugTextBrowser.append( msg )

    # slot
    def browseSlot( self ):
        ''' Called when the user presses the Browse button
        '''
        self.debugPrint( "Bot√≥n examinar presionado" )
        fileName, _ = QtWidgets.QFileDialog.getOpenFileName()
        self.setFile(fileName)

    def setFile(self, fileName):
        if self.model.isValid(fileName):
            if self.model.isCsv(fileName):
                self.model.setFileName(fileName)
                self.lineEdit.setText(fileName)
                self.debugPrint('Archivo seleccionado: {0}'.format(fileName))
            else:
                self.debugPrint('El archivo {0} no es de tipo CSV'.format(fileName))
                self.warningBox('El archivo seleccionado no es de tipo CSV')
        else:
            self.debugPrint('El archivo {0} no existe o no puede abrirse'.format(fileName))
            self.warningBox('El archivo seleccionado no existe o no puede abrirse')

    def warningBox(self, text):
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Warning)
        msg.setText(text)
        msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
        msg.exec()

def main():
    """
    This is the MAIN ENTRY POINT of our application.  The code at the end
    of the mainwindow.py script will not be executed, since this script is now
    our main program.   We have simply copied the code from mainwindow.py here
    since it was automatically generated by '''pyuic5'''.

    """
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = MainWindowUIClass()
    ui.setupUi(MainWindow)
    MainWindow.setFixedSize(MainWindow.geometry().width(), MainWindow.geometry().height())
    MainWindow.show()
    sys.exit(app.exec_())

main()